#
# OpenAPI Generator
#
# Configuration file for generating sources for Stalker-Backend
# Repository of Stalker-Backend: https://github.com/qb-team/Stalker-Backend
#

# CONFIG OPTIONS

# 	additionalModelTypeAnnotations
# 	    Additional annotations for model type(class level annotations)

# 	allowUnicodeIdentifiers
# 	    boolean, toggles whether unicode identifiers are allowed in names or not, default is false (Default: false)

# 	apiFirst
# 	    Generate the API from the OAI spec at server compile time (API first approach) (Default: false)

# 	apiPackage
# 	    package for generated api classes (Default: org.openapitools.api)

# 	artifactDescription
# 	    artifact description in generated pom.xml (Default: OpenAPI Java)

# 	artifactId
# 	    artifactId in generated pom.xml. This also becomes part of the generated library's filename (Default: openapi-spring)

# 	artifactUrl
# 	    artifact URL in generated pom.xml (Default: https://github.com/openapitools/openapi-generator)

# 	artifactVersion
# 	    artifact version in generated pom.xml. This also becomes part of the generated library's filename (Default: 1.0.0)

# 	async
# 	    use async Callable controllers (Default: false)

# 	basePackage
# 	    base package (invokerPackage) for generated code (Default: org.openapitools)

# 	bigDecimalAsString
# 	    Treat BigDecimal values as Strings to avoid precision loss. (Default: false)

# 	booleanGetterPrefix
# 	    Set booleanGetterPrefix (Default: get)

# 	configPackage
# 	    configuration package for generated code (Default: org.openapitools.configuration)

# 	dateLibrary
# 	    Option. Date library to use (Default: threetenbp)
# 	        joda - Joda (for legacy app only)
# 	        legacy - Legacy java.util.Date (if you really have a good reason not to use threetenbp
# 	        java8-localdatetime - Java 8 using LocalDateTime (for legacy app only)
# 	        java8 - Java 8 native JSR310 (preferred for jdk 1.8+) - note: this also sets "java8" to true
# 	        threetenbp - Backport of JSR310 (preferred for jdk < 1.8)

# 	delegatePattern
# 	    Whether to generate the server files using the delegate pattern (Default: false)

# 	developerEmail
# 	    developer email in generated pom.xml (Default: team@openapitools.org)

# 	developerName
# 	    developer name in generated pom.xml (Default: OpenAPI-Generator Contributors)

# 	developerOrganization
# 	    developer organization in generated pom.xml (Default: OpenAPITools.org)

# 	developerOrganizationUrl
# 	    developer organization URL in generated pom.xml (Default: http://openapitools.org)

# 	disableHtmlEscaping
# 	    Disable HTML escaping of JSON strings when using gson (needed to avoid problems with byte[] fields) (Default: false)

# 	ensureUniqueParams
# 	    Whether to ensure parameter names are unique in an operation (rename parameters that are not). (Default: true)

# 	fullJavaUtil
# 	    whether to use fully qualified name for classes under java.util. This option only works for Java API client (Default: false)

# 	groupId
# 	    groupId in generated pom.xml (Default: org.openapitools)

# 	hateoas
# 	    Use Spring HATEOAS library to allow adding HATEOAS links (Default: false)

# 	hideGenerationTimestamp
# 	    Hides the generation timestamp when files are generated. (Default: false)

# 	implicitHeaders
# 	    Skip header parameters in the generated API methods using @ApiImplicitParams annotation. (Default: false)

# 	interfaceOnly
# 	    Whether to generate only API interface stubs without the server files. (Default: false)

# 	invokerPackage
# 	    root package for generated code (Default: org.openapitools.api)

# 	java8
# 	    Option. Use Java8 classes instead of third party equivalents (Default: false)
# 	        true - Use Java 8 classes such as Base64. Use java8 default interface when a responseWrapper is used
# 	        false - Various third party libraries as needed

# 	library
# 	    library template (sub-template) (Default: spring-boot)
# 	        spring-boot - Spring-boot Server application using the SpringFox integration.
# 	        spring-mvc - Spring-MVC Server application using the SpringFox integration.
# 	        spring-cloud - Spring-Cloud-Feign client with Spring-Boot auto-configured settings.

# 	licenseName
# 	    The name of the license (Default: Unlicense)

# 	licenseUrl
# 	    The URL of the license (Default: http://unlicense.org)

# 	modelPackage
# 	    package for generated models (Default: org.openapitools.model)

# 	parentArtifactId
# 	    parent artifactId in generated pom N.B. parentGroupId, parentArtifactId and parentVersion must all be specified for any of them to take effect

# 	parentGroupId
# 	    parent groupId in generated pom N.B. parentGroupId, parentArtifactId and parentVersion must all be specified for any of them to take effect

# 	parentVersion
# 	    parent version in generated pom N.B. parentGroupId, parentArtifactId and parentVersion must all be specified for any of them to take effect

# 	performBeanValidation
# 	    Use Bean Validation Impl. to perform BeanValidation (Default: false)

# 	prependFormOrBodyParameters
# 	    Add form or body parameters to the beginning of the parameter list. (Default: false)

# 	reactive
# 	    wrap responses in Mono/Flux Reactor types (spring-boot only) (Default: false)

# 	responseWrapper
# 	    wrap the responses in given type (Future, Callable, CompletableFuture,ListenableFuture, DeferredResult, HystrixCommand, RxObservable, RxSingle or fully qualified type)

# 	returnSuccessCode
# 	    Generated server returns 2xx code (Default: false)

# 	scmConnection
# 	    SCM connection in generated pom.xml (Default: scm:git:git@github.com:openapitools/openapi-generator.git)

# 	scmDeveloperConnection
# 	    SCM developer connection in generated pom.xml (Default: scm:git:git@github.com:openapitools/openapi-generator.git)

# 	scmUrl
# 	    SCM URL in generated pom.xml (Default: https://github.com/openapitools/openapi-generator)

# 	serializableModel
# 	    boolean - toggle "implements Serializable" for generated models (Default: false)

# 	singleContentTypes
# 	    Whether to select only one produces/consumes content-type by operation. (Default: false)

# 	skipDefaultInterface
# 	    Whether to generate default implementations for java8 interfaces (Default: false)

# 	snapshotVersion
# 	    Uses a SNAPSHOT version.
# 	        true - Use a SnapShot Version
# 	        false - Use a Release Version

# 	sortModelPropertiesByRequiredFlag
# 	    Sort model properties to place required parameters before optional parameters. (Default: true)

# 	sortParamsByRequiredFlag
# 	    Sort method arguments to place required parameters before optional parameters. (Default: true)

# 	sourceFolder
# 	    source folder for generated code (Default: src/main/java)

# 	swaggerDocketConfig
# 	    Generate Spring OpenAPI Docket configuration class. (Default: false)

# 	title
# 	    server title name or client service name (Default: OpenAPI Spring)

# 	unhandledException
# 	    Declare operation methods to throw a generic exception and allow unhandled exceptions (useful for Spring `@ControllerAdvice` directives). (Default: false)

# 	useBeanValidation
# 	    Use BeanValidation API annotations (Default: true)

# 	useOptional
# 	    Use Optional container for optional parameters (Default: false)

# 	useTags
# 	    use tags for creating interface and controller classnames (Default: false)

# 	virtualService
# 	    Generates the virtual service. For more details refer - https://github.com/elan-venture/virtualan/wiki (Default: false)

# 	withXml
# 	    whether to include support for application/xml content type and include XML annotations in the model (works with libraries that provide support for JSON and XML) (Default: false)

# CONFIGURATION SETTINGS
title: Stalker API
developerOrganization: qbteam
developerEmail: qbteamswe@gmail.com
developerOrganizationUrl: https://github.com/qb-team
groupId: it.qbteam
artifactId: stalker-api
artifactDescription: Stalker API
parentGroupId: it.qbteam
parentArtifactId: stalker-backend
parentVersion: 0.0.1
invokerPackage: it.qbteam
basePackage: it.qbteam
modelPackage: it.qbteam.model
configPackage: it.qbteam.config
apiPackage: it.qbteam.api
interfaceOnly: true
java8: true
dateLibrary: java8
implicitHeaders: false
hideGenerationTimestamp: true
skipDefaultInterface: true
useOptional: true
performBeanValidation: true
snapshotVersion: false