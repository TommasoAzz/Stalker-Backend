/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.2.3).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package it.qbteam.api;

import it.qbteam.model.Favorite;
import it.qbteam.model.Organization;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.Authorization;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiParam;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;

@Validated
@Api(value = "favorite", description = "the favorite API")
public interface FavoriteApi {

    /**
     * POST /favorite/addfavorite : Adds a new organization to the user&#39;s favorite organization list.
     * Adds a new organization to the user&#39;s favorite organization list. If the organization has trackingMode: authenticated, then the user account of the organization must be linked to Stalker&#39;s account. Only app users can access this end-point.
     *
     * @param favorite  (required)
     * @return Organization successfully added to the list of favorite.  The favorite record just added (including the organization) gets returned. (status code 201)
     *         or The user already added the organization to the list of favorite organizations. (status code 400)
     *         or The user is not authenticated. Nothing gets returned. (status code 401)
     *         or Users who did not bind their account with their organization&#39;s account and administrators cannot have access. Nothing gets returned. (status code 403)
     *         or The organization could not be found. Nothing gets returned. (status code 404)
     */
    @ApiOperation(value = "Adds a new organization to the user's favorite organization list.", nickname = "addFavoriteOrganization", notes = "Adds a new organization to the user's favorite organization list. If the organization has trackingMode: authenticated, then the user account of the organization must be linked to Stalker's account. Only app users can access this end-point.", response = Favorite.class, authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "favorite", })
    @ApiResponses(value = { 
        @ApiResponse(code = 201, message = "Organization successfully added to the list of favorite.  The favorite record just added (including the organization) gets returned.", response = Favorite.class),
        @ApiResponse(code = 400, message = "The user already added the organization to the list of favorite organizations."),
        @ApiResponse(code = 401, message = "The user is not authenticated. Nothing gets returned."),
        @ApiResponse(code = 403, message = "Users who did not bind their account with their organization's account and administrators cannot have access. Nothing gets returned."),
        @ApiResponse(code = 404, message = "The organization could not be found. Nothing gets returned.") })
    @RequestMapping(value = "/favorite/addfavorite",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Favorite> addFavoriteOrganization(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Favorite favorite);

    
    /**
     * GET /favorite/{userId} : Gets the list of favorite organizations of a user.
     * Gets the list of favorite organizations of a user.  Only app users can access this end-point.
     *
     * @param userId ID of the user. It must be the same of the userId of the authenticated user. (required)
     * @return List of favorite organizations returned successfully. (status code 200)
     *         or List of favorite organizations is empty. Nothing gets returned. (status code 204)
     *         or The supplied userId is incorrect. Nothing gets returned. (status code 400)
     *         or The user or the administrator is not authenticated. Nothing gets returned. (status code 401)
     *         or Administrators cannot have access. Nothing gets returned. (status code 403)
     */
    @ApiOperation(value = "Gets the list of favorite organizations of a user.", nickname = "getFavoriteOrganizationList", notes = "Gets the list of favorite organizations of a user.  Only app users can access this end-point.", response = Organization.class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "favorite", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "List of favorite organizations returned successfully.", response = Organization.class, responseContainer = "List"),
        @ApiResponse(code = 204, message = "List of favorite organizations is empty. Nothing gets returned."),
        @ApiResponse(code = 400, message = "The supplied userId is incorrect. Nothing gets returned."),
        @ApiResponse(code = 401, message = "The user or the administrator is not authenticated. Nothing gets returned."),
        @ApiResponse(code = 403, message = "Administrators cannot have access. Nothing gets returned.") })
    @RequestMapping(value = "/favorite/{userId}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<Organization>> getFavoriteOrganizationList(@ApiParam(value = "ID of the user. It must be the same of the userId of the authenticated user.",required=true) @PathVariable("userId") String userId);


    /**
     * POST /favorite/removefavorite : Removes the organization from the user&#39;s favorite organization list.
     * Removes the organization from the user&#39;s favorite organization list. Only app users can access this end-point.
     *
     * @param favorite  (required)
     * @return Organization successfully removed from the list of favorites. (status code 205)
     *         or The user is not authenticated. Nothing gets returned. (status code 401)
     *         or Administrators cannot have access. Nothing gets returned. (status code 403)
     *         or The favorite was not found, hence it was not removed. Nothing gets returned. (status code 404)
     */
    @ApiOperation(value = "Removes the organization from the user's favorite organization list.", nickname = "removeFavoriteOrganization", notes = "Removes the organization from the user's favorite organization list. Only app users can access this end-point.", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "favorite", })
    @ApiResponses(value = { 
        @ApiResponse(code = 205, message = "Organization successfully removed from the list of favorites."),
        @ApiResponse(code = 401, message = "The user is not authenticated. Nothing gets returned."),
        @ApiResponse(code = 403, message = "Administrators cannot have access. Nothing gets returned."),
        @ApiResponse(code = 404, message = "The favorite was not found, hence it was not removed. Nothing gets returned.") })
    @RequestMapping(value = "/favorite/removefavorite",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> removeFavoriteOrganization(@ApiParam(value = "" ,required=true )  @Valid @RequestBody Favorite favorite);
    
}
