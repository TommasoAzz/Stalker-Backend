/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (4.3.1).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package it.qbteam.api;

import it.qbteam.model.OrganizationAuthenticationServerInformation;
import it.qbteam.model.OrganizationAuthenticationServerRequest;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.Authorization;
import io.swagger.annotations.ApiResponses;
import io.swagger.annotations.ApiResponse;
import io.swagger.annotations.ApiParam;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;

import javax.validation.Valid;
import java.util.List;

@Validated
@Api(value = "authenticationserver", description = "the authenticationserver API")
public interface AuthenticationServerApi {

    /**
     * POST /authenticationserver/userinformation : Gets the information on users given their identifier on the organization&#39;s authentication server.
     * Gets the information on users given their identifier on the organization&#39;s authentication server. Only web-app administrators can access this end-point.
     *
     * @param organizationAuthenticationServerRequest  (required)
     * @return Users&#39; information returned successfully. (status code 200)
     *         or No information was found. Nothing gets returned. (status code 204)
     *         or The administrator is not authenticated. Nothing gets returned. (status code 401)
     *         or Users cannot have access. Nothing gets returned. (status code 403)
     *         or The organization could not be found. Nothing gets returned. (status code 404)
     */
    @ApiOperation(value = "Gets the information on users given their identifier on the organization's authentication server.", nickname = "getUserInfoFromAuthServer", notes = "Gets the information on users given their identifier on the organization's authentication server. Only web-app administrators can access this end-point.", response = OrganizationAuthenticationServerInformation.class, responseContainer = "List", authorizations = {
        @Authorization(value = "bearerAuth")
    }, tags={ "authenticationserver", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Users' information returned successfully.", response = OrganizationAuthenticationServerInformation.class, responseContainer = "List"),
        @ApiResponse(code = 204, message = "No information was found. Nothing gets returned."),
        @ApiResponse(code = 401, message = "The administrator is not authenticated. Nothing gets returned."),
        @ApiResponse(code = 403, message = "Users cannot have access. Nothing gets returned."),
        @ApiResponse(code = 404, message = "The organization could not be found. Nothing gets returned.") })
    @RequestMapping(value = "/authenticationserver/userinformation",
        produces = { "application/json" }, 
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<List<OrganizationAuthenticationServerInformation>> getUserInfoFromAuthServer(@ApiParam(value = "" ,required=true )  @Valid @RequestBody OrganizationAuthenticationServerRequest organizationAuthenticationServerRequest);

}
