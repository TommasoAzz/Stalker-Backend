package it.qbteam.model;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.time.OffsetDateTime;

import javax.validation.Valid;
import javax.validation.constraints.Max;
import javax.validation.constraints.Min;
import javax.validation.constraints.NotNull;
import javax.validation.constraints.Size;

import org.springframework.data.redis.core.RedisHash;

/**
 * Movement in an organization.
 */
@ApiModel(description = "Movement in an organization.")
@RedisHash("OrganizationMovement")
public class OrganizationMovement   {
  @JsonProperty("exitToken")
  private String exitToken;

  @JsonProperty("timestamp")
  private OffsetDateTime timestamp;

  @JsonProperty("movementType")
  private Integer movementType;

  @JsonProperty("organizationId")
  private Long organizationId;

  @JsonProperty("orgAuthServerId")
  private String orgAuthServerId;

  public OrganizationMovement exitToken(String exitToken) {
    this.exitToken = exitToken;
    return this;
  }

  /**
   * Token generated by the server when the user entered in the organization. It is required only to track an exit movement. If this property is not empty in an entrance movement it will not be considered.
   * @return exitToken
  */
  @ApiModelProperty(value = "Token generated by the server when the user entered in the organization. It is required only to track an exit movement. If this property is not empty in an entrance movement it will not be considered.")

  @Size(max=256)
  public String getExitToken() {
    return exitToken;
  }

  public void setExitToken(String exitToken) {
    this.exitToken = exitToken;
  }

  public OrganizationMovement timestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Date and time of the moment in which the user entered the place.
   * @return timestamp
  */
  @ApiModelProperty(required = true, value = "Date and time of the moment in which the user entered the place.")
  @NotNull

  @Valid

  public OffsetDateTime getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(OffsetDateTime timestamp) {
    this.timestamp = timestamp;
  }

  public OrganizationMovement movementType(Integer movementType) {
    this.movementType = movementType;
    return this;
  }

  /**
   * Type of movement. It can be: - Entrance: 1 - Exit: -1
   * @return movementType
  */
  @ApiModelProperty(required = true, value = "Type of movement. It can be: - Entrance: 1 - Exit: -1")
  @NotNull

  @Min(-1) @Max(1)
  public Integer getMovementType() {
    return movementType;
  }

  public void setMovementType(Integer movementType) {
    this.movementType = movementType;
  }

  public OrganizationMovement organizationId(Long organizationId) {
    this.organizationId = organizationId;
    return this;
  }

  /**
   * Unique identifier of the organization in which the user had access.
   * @return organizationId
  */
  @ApiModelProperty(required = true, value = "Unique identifier of the organization in which the user had access.")
  @NotNull

  @Min(1L)
  public Long getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(Long organizationId) {
    this.organizationId = organizationId;
  }

  public OrganizationMovement orgAuthServerId(String orgAuthServerId) {
    this.orgAuthServerId = orgAuthServerId;
    return this;
  }

  /**
   * User unique identifier from the authentication server of the organization.
   * @return orgAuthServerId
  */
  @ApiModelProperty(value = "User unique identifier from the authentication server of the organization.")

  @Size(max=256)
  public String getOrgAuthServerId() {
    return orgAuthServerId;
  }

  public void setOrgAuthServerId(String orgAuthServerId) {
    this.orgAuthServerId = orgAuthServerId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OrganizationMovement organizationMovement = (OrganizationMovement) o;
    return Objects.equals(this.exitToken, organizationMovement.exitToken) &&
        Objects.equals(this.timestamp, organizationMovement.timestamp) &&
        Objects.equals(this.movementType, organizationMovement.movementType) &&
        Objects.equals(this.organizationId, organizationMovement.organizationId) &&
        Objects.equals(this.orgAuthServerId, organizationMovement.orgAuthServerId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(exitToken, timestamp, movementType, organizationId, orgAuthServerId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OrganizationMovement {\n");
    
    sb.append("    exitToken: ").append(toIndentedString(exitToken)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    movementType: ").append(toIndentedString(movementType)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    orgAuthServerId: ").append(toIndentedString(orgAuthServerId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

