/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.PlaceAuthenticatedAccess;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-02-27T15:59:20.699Z[GMT]")
@Api(value = "movement", description = "the movement API")
public interface MovementApi {

    @ApiOperation(value = "the user can retrive all his movements", nickname = "getMovementUserId", notes = "Muliple userId can be provided with comma separated number. ", response = PlaceAuthenticatedAccess.class, responseContainer = "List", tags={ "movement", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = PlaceAuthenticatedAccess.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid Id supplied"),
        @ApiResponse(code = 404, message = "Organization not found") })
    @RequestMapping(value = "/movement/{userId}",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<List<PlaceAuthenticatedAccess>> getMovementUserId(@ApiParam(value = "ID of an User",required=true) @PathVariable("userId") List<Long> userId
);

}
