/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.Organization;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-02-27T15:59:20.699Z[GMT]")
@Api(value = "organization", description = "the organization API")
public interface OrganizationApi {

    @ApiOperation(value = "create a new organization", nickname = "createOrganization", notes = "", tags={ "organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Organization created successfully"),
        @ApiResponse(code = 405, message = "Invalid input") })
    @RequestMapping(value = "/organization",
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.POST)
    ResponseEntity<Void> createOrganization(@ApiParam(value = "Organization that need to be added to the database" ,required=true )  @Valid @RequestBody Organization body
);


    @ApiOperation(value = "Get the information of an organization", nickname = "getOrganization", notes = "Returns a single organization", response = Organization.class, tags={ "organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Organization.class),
        @ApiResponse(code = 400, message = "Invalid Id supplied"),
        @ApiResponse(code = 404, message = "Organization not found") })
    @RequestMapping(value = "/organization/{organizationId}",
        produces = { "application/json", "application/xml" }, 
        method = RequestMethod.GET)
    ResponseEntity<Organization> getOrganization(@ApiParam(value = "ID of an organization",required=true) @PathVariable("organizationId") Long organizationId
);


    @ApiOperation(value = "update the information of an existing organization", nickname = "updateOrganization", notes = "", tags={ "organization", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "updated successfully"),
        @ApiResponse(code = 400, message = "Invalid organizationId supplied"),
        @ApiResponse(code = 404, message = "organization not found"),
        @ApiResponse(code = 405, message = "validation exception") })
    @RequestMapping(value = "/organization/{organizationId}",
        consumes = { "application/json", "application/xml" },
        method = RequestMethod.PUT)
    ResponseEntity<Void> updateOrganization(@ApiParam(value = "Organization that need to be added to the database" ,required=true )  @Valid @RequestBody Organization body
,@ApiParam(value = "ID of an organization",required=true) @PathVariable("organizationId") Long organizationId
);

}
