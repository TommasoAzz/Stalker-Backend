/**
 * NOTE: This class is auto generated by the swagger code generator program (3.0.18).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.OrganizationAnonymousMovement;
import io.swagger.model.OrganizationAuthenticatedMovement;
import io.swagger.model.PlaceAnonymousMovement;
import io.swagger.model.PlaceAuthenticatedMovement;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.bind.annotation.CookieValue;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
import java.util.Map;
@javax.annotation.Generated(value = "io.swagger.codegen.v3.generators.java.SpringCodegen", date = "2020-02-27T15:59:20.699Z[GMT]")
@Api(value = "trackMovement", description = "the trackMovement API")
public interface TrackMovementApi {

    @ApiOperation(value = "Lets the user track its movement with trackingMode set to anonymous in an organization's trackingArea and send it to the system.", nickname = "trackAnonymousMovementInOrganization", notes = "Tracks the user movement inside the trackingArea of an organization with the anonymous trackingMode.", tags={ "tracking", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Movement successfully tracked."),
        @ApiResponse(code = 400, message = "Movement could not be tracked due to incorrect data sent to the system.") })
    @RequestMapping(value = "/trackMovement/organization/anonymous",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> trackAnonymousMovementInOrganization(@ApiParam(value = ""  )  @Valid @RequestBody OrganizationAnonymousMovement body
);


    @ApiOperation(value = "Lets the user track its movement with trackingMode set to anonymous in a place's trackingArea and send it to the system.", nickname = "trackAnonymousMovementInPlace", notes = "Tracks the user movement inside the trackingArea of a place of an organization with the anonymous trackingMode.", tags={ "tracking", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Movement successfully tracked."),
        @ApiResponse(code = 400, message = "Movement could not be tracked due to incorrect data sent to the system.") })
    @RequestMapping(value = "/trackMovement/place/anonymous",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> trackAnonymousMovementInPlace(@ApiParam(value = ""  )  @Valid @RequestBody PlaceAnonymousMovement body
);


    @ApiOperation(value = "Lets the user track its movement with trackingMode set to authenticated in an organization's trackingArea and send it to the system.", nickname = "trackAuthenticatedMovementInOrganization", notes = "Tracks the user movement inside the trackingArea of an organization with the authenticated trackingMode.", tags={ "tracking", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Movement successfully tracked."),
        @ApiResponse(code = 400, message = "Movement could not be tracked due to incorrect data sent to the system.") })
    @RequestMapping(value = "/trackMovement/organization/authenticated",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> trackAuthenticatedMovementInOrganization(@ApiParam(value = ""  )  @Valid @RequestBody OrganizationAuthenticatedMovement body
);


    @ApiOperation(value = "Lets the user track its movement with trackingMode set to authenticated in a place's trackingArea and send it to the system.", nickname = "trackAuthenticatedMovementInPlace", notes = "Tracks the user movement inside the trackingArea of a place of an organization with the authenticated trackingMode.", tags={ "tracking", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "Movement successfully tracked."),
        @ApiResponse(code = 400, message = "Movement could not be tracked due to incorrect data sent to the system.") })
    @RequestMapping(value = "/trackMovement/place/authenticated",
        consumes = { "application/json" },
        method = RequestMethod.POST)
    ResponseEntity<Void> trackAuthenticatedMovementInPlace(@ApiParam(value = ""  )  @Valid @RequestBody PlaceAuthenticatedMovement body
);

}
