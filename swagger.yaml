openapi: 3.0.0
info:
  version: "1.0.0"
  title: "Stalker API"
  description: "API di Stalker di Imola Informatica sviluppato da qbteam"
  contact:
    name: "qbteam"
    url: "https://github.com/qb-team/"
    email: "qbteamswe@gmail.com"
# Server attualmente localhost
servers:
  - description: Server attualmente localhost
    url: http://localhost:8080/
tags:
  - name: userAuthentication
    description: User authentication related endpoints.
  - name: adminAuthentication
    description: Administrator authentication related endpoints.
  - name: organization
    description: Organization related endpoints.
  - name: place
    description: Place related endpoints.
  - name: tracking
    description: Tracking related endpoints.
  - name: movement
    description: Movement related endpoints.
  - name: access
    description: Access related endpoints.
paths:
  "/authentication/userLogin":
    post:
      tags:
        - userAuthentication
      summary: Lets the user login via the authentication service.
      description: Lets the user login via the authentication service.
      operationId: userLogin
      responses:
        "200":
          description: Logged in successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponseUser"
        "400":
          description: Incorrect credentials.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticationDataUser"
  "/authentication/userRegistration":
    post:
      tags:
        - userAuthentication
      summary: Lets the user registrate into the system.
      description: Lets the user registrate into the system.
      operationId: userRegistration
      responses:
        "200":
          description: Registered successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponseUser"
        "400":
          description: Too weak password.
        "406":
          description: Account already present with this e-mail address.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticationDataUser"
  "/authentication/userLogout":
    post:
      tags:
        - userAuthentication
      summary: Lets the user logout from the system.
      description: Lets the user logout from the system.
      operationId: userLogout
      responses:
        "200":
          description: Logged out successfully.
  "/authentication/adminLogin":
    post:
      tags:
        - adminAuthentication
      summary: Lets the admin login via the authentication service.
      description: Lets the admin login via the authentication service.
      operationId: adminLogin
      responses:
        "200":
          description: Logged in successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/AuthResponseAdmin"
        "400":
          description: Incorrect credentials.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AuthenticationDataAdmin"
  "/authentication/adminLogout":
    post:
      tags:
        - adminAuthentication
      summary: Lets the admin logout from the system.
      description: Lets the admin logout from the system.
      operationId: adminLogout
      responses:
        "200":
          description: Logged out successfully.
  "/organization":
    get:
      tags:
        - organization
      summary: Returns the list of all organizations.
      description: Returns the list of all organizations.
      operationId: getOrganizationList
      responses:
        "200":
          description: Organizations returned successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Organization"
  "/organization/{organizationId}":
    get:
      tags:
        - organization
      summary: Gets the data of a single organization.
      description: Gets the data of a single organization.
      operationId: getOrganizationById
      parameters:
        - name: organizationId
          in: path
          description: ID of an organization.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Organization returned successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "400":
          description: Organization not found.
    put:
      tags:
        - organization
      summary: Updates one or more properties of a single organization.
      description: Updates one or more properties of a single organization.
      operationId: updateOrganization
      parameters:
        - name: organizationId
          in: path
          description: ID of an organization.
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Organization updated successfully.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Organization"
        "400":
          description: Invalid organizationId supplied.
        "405":
          description: Organization not found.
      requestBody:
        $ref: "#/components/requestBodies/Organization"
  "/movement/track/organization/authenticated":
    post:
      tags:
        - tracking
      summary: Tracks the user movement inside the trackingArea of an organization with the authenticated trackingMode.
      description: Tracks the user movement inside the trackingArea of an organization with the authenticated trackingMode.
      operationId: trackAuthenticatedMovementInOrganization
      responses:
        "200":
          description: Movement successfully tracked.
        "400":
          description: Movement could not be tracked due to incorrect data sent to the system.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationAuthenticatedMovement"
  "/movement/track/organization/anonymous":
    post:
      tags:
        - tracking
      summary: Tracks the user movement inside the trackingArea of an organization with the anonymous trackingMode.
      description: Tracks the user movement inside the trackingArea of an organization with the anonymous trackingMode.
      operationId: trackAnonymousMovementInOrganization
      responses:
        "200":
          description: Movement successfully tracked.
        "400":
          description: Movement could not be tracked due to incorrect data sent to the system.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/OrganizationAnonymousMovement"
  "/movement/track/place/authenticated":
    post:
      tags:
        - tracking
      summary: Tracks the user movement inside the trackingArea of a place of an organization with the authenticated trackingMode.
      description: Tracks the user movement inside the trackingArea of a place of an organization with the authenticated trackingMode.
      operationId: trackAuthenticatedMovementInPlace
      responses:
        "200":
          description: Movement successfully tracked.
        "400":
          description: Movement could not be tracked due to incorrect data sent to the system.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlaceAuthenticatedMovement"
  "/movement/track/place/anonymous":
    post:
      tags:
        - tracking
      summary: Tracks the user movement inside the trackingArea of a place of an organization with the anonymous trackingMode.
      description: Tracks the user movement inside the trackingArea of a place of an organization with the anonymous trackingMode.
      operationId: trackAnonymousMovementInPlace
      responses:
        "200":
          description: Movement successfully tracked.
        "400":
          description: Movement could not be tracked due to incorrect data sent to the system.
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PlaceAnonymousMovement"
  "/access/place/{placeId}/authenticated":
    get:
      tags:
        - access
      summary: Returns all the authenticated accesses in a place registered.
      description: Returns all the authenticated accesses in a place registered.
      operationId: getAccessListInPlace
      parameters:
        - name: placeId
          in: path
          description: ID of a place
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Authenticated accesses in a place returned successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlaceAuthenticatedAccess"
        "400":
          description: Accesses were not found with these placeId.
  "/access/place/{placeId}/authenticated/{userIds}":
    get:
      tags:
        - access
      summary: Returns all the authenticated accesses in a place registered of one or more users (userIds are separated by commas).
      description: Returns all the authenticated accesses in a place registered of one or more users (userIds are separated by commas).
      operationId: getAccessListInPlaceOfUsers
      parameters:
        - name: userIds
          in: path
          description: One or more userIds
          required: true
          explode: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: placeId
          in: path
          description: ID of a place
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Authenticated accesses in a place returned successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/PlaceAuthenticatedAccess"
        "400":
          description: Accesses were not found with these placeId and userIds.
  "/access/organization/{organizationId}/authenticated":
    get:
      tags:
        - organization
      summary: Returns all the authenticated accesses in an organization registered.
      description: Returns all the authenticated accesses in an organization registered.
      operationId: getAccessListInOrganization
      parameters:
        - name: organizationId
          in: path
          description: ID of an organization
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Authenticated accesses in an organization returned successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganizationAuthenticatedAccess"
            application/xml:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganizationAuthenticatedAccess"
        "400":
          description: Accesses were not found with these organizationId.
  "/access/organization/{organizationId}/authenticated/{userIds}":
    get:
      tags:
        - access
      summary: Returns all the authenticated accesses in an organization registered of one or more users (userIds are separated by commas).
      description: Returns all the authenticated accesses in an organization registered of one or more users (userIds are separated by commas).
      operationId: getAccessListInOrganizationOfUsers
      parameters:
        - name: userIds
          in: path
          description: One or more userIds
          required: true
          explode: true
          schema:
            type: array
            items:
              type: integer
              format: int64
        - name: organizationId
          in: path
          description: ID of an organization
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: Authenticated accesses in an organization returned successfully.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/OrganizationAuthenticatedAccess"
        "400":
          description: Accesses were not found with these organizationId and userIds.
components:
  schemas:
    AuthenticationDataUser:
      type: object
      description: Data requested to the user when authenticating or registering to the system.
      required:
        - mail
        - password
      properties:
        mail:
          type: string
        password:
          type: string
          format: password
    AuthResponseUser:
      type: object
      description: Data given to the user when authenticated.
      required:
        - token
        - expirationDate
      properties:
        token:
          type: string
        expirationDate:
          type: string
          format: date-time
    AuthenticationDataAdmin:
      type: object
      description: Data given to the admin when authenticated.
      required:
        - token
        - expirationDate
      properties:
        token:
          type: string
        expirationDate:
          type: string
          format: date-time
    AuthResponseAdmin:
      type: object
      description: Data given to the admin when authenticated.
      required:
        - token
        - expirationDate
      properties:
        token:
          type: string
        expirationDate:
          type: string
          format: date-time
    Address:
      type: object
      description: The address of an organization.
      required:
        - street
        - number
        - postcode
        - city
        - country
      properties:
        street:
          type: string
          description: the street where the organization is situated
        number:
          type: integer
          format: int32
          description: the number in the street where the organization is situated
        postCode:
          type: integer
          format: int32
          description: the postcode of the city where the organization is situated
        city:
          type: string
          description: the city where the organization is situated
        state:
          type: string
          description: the state where the organization is situated
    Organization:
      type: object
      description: >-
        Subject interested in tracking people's presence inside its own places, in either an anonymous or authenticated way.
      required:
        - id
        - name
        - address
        - creationDate
        - modifyDate
        - perimeter
        - trackingArea
        - trackingMode
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for an organization.
        name:
          type: string
          description: Name of the organization.
        description:
          type: string
          description: Small description of what the organization does.
        image:
          type: string
          description: Image/logo for the organization which gets shown on the application.
        address:
          $ref: "#/components/schemas/Address"
        serverLDAP:
          type: string
          description: >-
            URL or IP address of the LDAP server of the organization.
            If it's required a specific TCP port (different from LDAP's default) it must be specified.
            Needed only if trackingMethod is set to authenticated.
        creationDate:
          type: string
        modifyDate:
          format: date-time
          description: When the organization was added to the system.
        lastChangeDate:
          type: string
          format: date-time
          description: When the organization parameters were last changed.
        trackingArea:
          type: string
          description: >-
            Area subjected to movement tracking of people.
            It is a collection of (longitude, latitude) pairs consisting in a polygon.
            The string is expressed in JSON format.
        trackingMode:
          type: string
          description: How an user who added to its favorites the organization can be tracked inside the organization's trackingArea and its places.
          enum:
            - authenticated
            - anonymous
    Place:
      type: object
      description: Area of an organization subjected to tracking.
      required:
        - id
        - organizationId
        - trackingArea
      properties:
        id:
          type: integer
          format: int64
          description: Unique identifier for a place of an organization.
        name:
          type: string
          description: Name describing the place. If not set by user it gets automatically filled.
        organizationId:
          type: integer
          format: int64
          description: Unique identifier of the organization the place is part of.
        trackingArea:
          type: string
          description: >-
            rea subjected to movement tracking of people.
            It is a collection of (longitude, latitude) pairs consisting in a polygon.
            The string is expressed in JSON format.
    User:
      type: object
      required:
        - userId
      properties:
        userId:
          type: string
          description: Authentication service's user unique identifier.
        ldapId:
          type: integer
          description: Organization LDAP server's user unique identifier.
    Administrator:
      type: object
      required:
        - administratorId
      properties:
        administratorId:
          type: string
          description: Authentication service's administrator unique identifier.
        ldapId:
          type: integer
          description: Organization LDAP server's administrator unique identifier.
    Permission:
      type: object
      description: What can or cannot do an organization's administrator.
      required:
        - userId
        - organizationId
        - permission
      properties:
        administratorId:
          type: string
          description: Authentication service's administrator unique identifier.
        organizationId:
          type: integer
          format: int64
          description: Unique identifier of the organization the administrator is part of.
        permission:
          type: string
          description: >-
            What can or cannot do an organization's administrator.
            Owner is the highest level of permissions while viewer is the lowest.
          enum:
            - owner
            - manager
            - viewer
    Favorite:
      type: object
      description: >-
        Link between the user and the organization: only the organization which users sets to be their favorite can track their movements.
      required:
        - userId
        - organizationId
        - creationDate
      properties:
        userId:
          type: string
          description: Authentication service's user unique identifier.
        organizationId:
          type: integer
          format: int64
          description: Unique identifier of the organization the user sets as favorite.
        creationDate:
          type: string
          format: date-time
          description: When the favorite was added by the user.
    Access:
      type: object
      description: Generic access to an organization or a place of it.
      required:
        - entranceTimestamp
        - exitTimestamp
      properties:
        entranceTimestamp:
          type: string
          format: date-time
          description: Date and time of the moment in which the user entered the place.
        exitTimestamp:
          type: string
          format: date-time
          description: Date and time of the moment in which the user left the place.
    PlaceAuthenticatedAccess:
      type: object
      description: Access to a place of an organization made with the authenticated trackingMode.
      required:
        - access
        - placeId
        - ldapId
      properties:
        access:
          $ref: "#/components/schemas/Access"
        placeId:
          type: integer
          format: int64
          description: Unique identifier of the place in which the user had access.
        ldapId:
          type: integer
          format: int64
          description: Organization LDAP server's user unique identifier.
    OrganizationAuthenticatedAccess:
      type: object
      description: Access to an organization made with the authenticated trackingMode.
      required:
        - access
        - organizationId
        - ldapId
      properties:
        access:
          $ref: "#/components/schemas/Access"
        organizationId:
          type: integer
          format: int64
          description: Unique identifier of the organization in which the user had access.
        ldapId:
          type: integer
          format: int64
          description: Organization LDAP server's user unique identifier.
    PlaceAnonymousAccess:
      type: object
      description: Access to a place of an organization made with the anonymous trackingMode.
      required:
        - access
        - placeId
      properties:
        access:
          $ref: "#/components/schemas/Access"
        placeId:
          type: integer
          format: int64
          description: Unique identifier of the place in which the user had access.
    OrganizationAnonymousAccess:
      type: object
      description: Access to an organization made with the authenticated trackingMode.
      required:
        - access
        - organizationId
      properties:
        access:
          $ref: "#/components/schemas/Access"
        organizationId:
          type: integer
          format: int64
          description: Unique identifier of the organization in which the user had access.
    Movement:
      type: object
      description: Generic movement in an organization or in a place of it.
      required:
        - timestamp
        - movementType
      properties:
        timestamp:
          type: string
          format: date-time
          description: Date and time of the moment in which the user entered the place.
        movementType:
          type: string
          description: Type of movement.
          enum:
            - entrance
            - exit
    PlaceAuthenticatedMovement:
      type: object
      description: Movement in a place of an organization made with the authenticated trackingMode.
      required:
        - movement
        - placeId
        - ldapId
      properties:
        movement:
          $ref: "#/components/schemas/Movement"
        placeId:
          type: integer
          format: int64
          description: Unique identifier of the place in which the user had access.
        ldapId:
          type: integer
          format: int64
          description: Organization LDAP server's user unique identifier.
    OrganizationAuthenticatedMovement:
      type: object
      description: Movement to an organization made with the authenticated trackingMode.
      required:
        - movement
        - organizationId
        - ldapId
      properties:
        movement:
          $ref: "#/components/schemas/Movement"
        organizationId:
          type: integer
          format: int64
          description: Unique identifier of the organization in which the user had access.
        ldapId:
          type: integer
          format: int64
          description: Organization LDAP server's user unique identifier.
    PlaceAnonymousMovement:
      type: object
      description: Movement to a place of an organization made with the anonymous trackingMode.
      required:
        - movement
        - placeId
      properties:
        movement:
          $ref: "#/components/schemas/Movement"
        placeId:
          type: integer
          format: int64
          description: Unique identifier of the place in which the user had access.
    OrganizationAnonymousMovement:
      type: object
      description: Movement to an organization made with the authenticated trackingMode.
      required:
        - movement
        - organizationId
      properties:
        movement:
          $ref: "#/components/schemas/Movement"
        organizationId:
          type: integer
          format: int64
          description: Unique identifier of the organization in which the user had access.
  requestBodies:
    Organization:
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Organization"
        application/xml:
          schema:
            $ref: "#/components/schemas/Organization"
      description: Organization that need to be added to the database
      required: true
