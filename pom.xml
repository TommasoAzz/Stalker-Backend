<?xml version="1.0" encoding="UTF-8" ?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.2.6.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>it.qbteam</groupId>
	<artifactId>stalker-backend</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>Stalker Backend</name>
	<description>Backend per Stalker</description>
	<packaging>pom</packaging>

	<modules>
		<!-- nomi delle cartelle dei moduli -->
		<module>api</module>
		<module>service</module>
	</modules>

	<!-- Delle "variabili d'ambiente" valide solo per questo file POM -->
	<properties>
		<java.version>1.8</java.version>
		<swagger.core.version>2.1.1</swagger.core.version>
		<swagger.annotation.version>1.6.0</swagger.annotation.version>
		<lombok.version>1.18.12</lombok.version>
		<jackson-databind-nullable.version>0.2.1</jackson-databind-nullable.version>
		<checkstyle.version>3.1.1</checkstyle.version>
	</properties>

	<dependencies>
		<!-- Generatore automatico di risorse, come ad esempio getter, setter, metodi equals, hashCode e toString, ecc. -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${lombok.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- Genera i file .yaml di Swagger (da sorgente a yaml) -->
		<dependency>
			<groupId>io.swagger.core.v3</groupId>
			<artifactId>swagger-core</artifactId>
			<version>${swagger.core.version}</version>
		</dependency>

		<!-- Aggiunge annotazioni extra a quelle di Swagger Core di default -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<version>${swagger.annotation.version}</version>
		</dependency>

		<!-- Aggiunge JsonNullable da usare nei Java bean (è simile al tipo Optional) -->
		<dependency>
			<groupId>org.openapitools</groupId>
			<artifactId>jackson-databind-nullable</artifactId>
			<version>${jackson-databind-nullable.version}</version>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<!-- <plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin> -->

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.version}</version>
				<configuration>
					<configLocation>${project.basedir}/../checkstyle.xml</configLocation>
					<encoding>UTF-8</encoding>
					<failsOnError>false</failsOnError>
					<consoleOutput>true</consoleOutput>
					<linkXRef>false</linkXRef>
				</configuration>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>checkstyle</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${checkstyle.version}</version>
				<configuration>
					<configLocation>${project.basedir}/../checkstyle.xml</configLocation> <!-- il punto perché lo vogliono i moduli figli -->
					<encoding>UTF-8</encoding>
					<failsOnError>false</failsOnError>
					<consoleOutput>true</consoleOutput>
					<linkXRef>false</linkXRef>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>${maven-jxr-plugin.version}</version>
			</plugin>
		</plugins>
	</reporting>
</project>